# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Build and push Docker images
        # You may pin to the exact commit or the version.
        # uses: docker/build-push-action@ab83648e2e224cfeeab899e23b639660765c3a89
        uses: docker/build-push-action@v1.1.1
        with:
          # Username used to log in to a Docker registry. If not set then no login will occur
          username: # shayfisher
          # Password or personal access token used to log in to a Docker registry. If not set then no login will occur
          password: # 5bcde03a-c3fc-4fbb-9e06-caa4150042bb
          # Server address of Docker registry. If not set then will default to Docker Hub
          #registry: # optional
          # Docker repository to tag the image with
          repository: shayfisher
          # Comma-delimited list of tags. These will be added to the registry/repository to form the image's tags
          tags: # v1.0.0
          # Automatically tags the built image with the git reference as per the readme
          #tag_with_ref: # optional
          # Automatically tags the built image with the git short SHA as per the readme
          #tag_with_sha: # optional
          # Path to the build context
          #path: # optional, default is .
          # Path to the Dockerfile (Default is '{path}/Dockerfile')
          #dockerfile: # optional
          # Sets the target stage to build
          #target: # optional
          # Always attempt to pull a newer version of the image
          #always_pull: # optional
          # Comma-delimited list of build-time variables
          build_args: # PGVERSION=12
          # Comma-delimited list of images to consider as cache sources
          #cache_froms: # optional
          # Comma-delimited list of labels to add to the built image
          #labels: 
          # Adds labels with git repository information to the built image
          #add_git_labels: # optional
          # Whether to push the image
          #push: # optional, default is true
